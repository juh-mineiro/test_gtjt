
1) Observe o trecho de código abaixo: int INDICE = 13, SOMA = 0, K = 0;
Enquanto K < INDICE faça { K = K + 1; SOMA = SOMA + K; }
Imprimir(SOMA);
Ao final do processamento, qual será o valor da variável SOMA?

#Programa Valor da variavel SOMA :

int INDICE = 13, SOMA = 0, K = 0;
while (K < INDICE) {
    K = K + 1;
    SOMA = SOMA + K;
}
printf("%d", SOMA);

# 

2) Dado a sequência de Fibonacci, onde se inicia por 0 e 1 e o próximo valor sempre será a soma dos 2 valores anteriores
(exemplo: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34...), escreva um programa na linguagem que desejar onde, informado um número, 
ele calcule a sequência de Fibonacci e retorne uma mensagem avisando se o número informado pertence ou não a sequência.

#Programa sequência Fibonacci: 

def fibonacci(n):
    a, b = 0, 1
    while a <= n: 
       if a == n:
            return True
       a, b = b, a +b 
    return False 

numero= int(input("Informe um número aqui: "))
if fionacci(numero):
    print(f"O número {numero} pertence á sequência de Fibonacci.")
else:
    print(f"O número {numero} não pertence á sequência de Fibonacci.")


#

3) Dado um vetor que guarda o valor de faturamento diário de uma distribuidora, faça um programa, na linguagem que desejar, que calcule e retorne:
• O menor valor de faturamento ocorrido em um dia do mês;
• O maior valor de faturamento ocorrido em um dia do mês;
• Número de dias no mês em que o valor de faturamento diário foi superior à média mensal.

a) Usar o json ou xml disponível como fonte dos dados do faturamento mensal;
b) Podem existir dias sem faturamento, como nos finais de semana e feriados. Estes dias devem ser ignorados no cálculo da média;

#Programa análise de faturamento:

import json

# Dados em JSON fornecidos
dados = '''
[
    {"dia": 1, "valor": 22174.1664},
    {"dia": 2, "valor": 24537.6698},
    {"dia": 3, "valor": 26139.6134},
    {"dia": 4, "valor": 0.0},
    {"dia": 5, "valor": 0.0},
    {"dia": 6, "valor": 26742.6612},
    {"dia": 7, "valor": 0.0},
    {"dia": 8, "valor": 42889.2258},
    {"dia": 9, "valor": 46251.174},
    {"dia": 10, "valor": 11191.4722},
    {"dia": 11, "valor": 0.0},
    {"dia": 12, "valor": 0.0},
    {"dia": 13, "valor": 3847.4823},
    {"dia": 14, "valor": 373.7838},
    {"dia": 15, "valor": 2659.7563},
    {"dia": 16, "valor": 48924.2448},
    {"dia": 17, "valor": 18419.2614},
    {"dia": 18, "valor": 0.0},
    {"dia": 19, "valor": 0.0},
    {"dia": 20, "valor": 35240.1826},
    {"dia": 21, "valor": 43829.1667},
    {"dia": 22, "valor": 18235.6852},
    {"dia": 23, "valor": 4355.0662},
    {"dia": 24, "valor": 13327.1025},
    {"dia": 25, "valor": 0.0},
    {"dia": 26, "valor": 0.0},
    {"dia": 27, "valor": 25681.8318},
    {"dia": 28, "valor": 1718.1221},
    {"dia": 29, "valor": 13220.495},
    {"dia": 30, "valor": 8414.61}
]
'''

faturamento - json.loads(dados)

# Filtrando valores de faturamento, ignorando dias com valor 0.0
valores = [dia["valor"] for dia in faturamento if dia["valor"] > 0]

# Calcular o menor e maior valor de faturamento
menor_valor = min(valores)
maior_valor = max(valores)

# Calcular média mensal e ignorando dias sem faturamento
media_mensal = sum(valores) / len(valores)

# Contar núm de dias com faturamento acima da média mensal
dias_acima_da_media = sum(1 for valor in valores if valor > media_mensal)

print(f"Menor valor: R${menor_valor}")
print(f"Maior valor: R${maior_valor}")
print(f"Dias acima da média: {dias_acima_da_media}")

#

4) Dado o valor de faturamento mensal de uma distribuidora, detalhado por estado:
• SP – R$67.836,43
• RJ – R$36.678,66
• MG – R$29.229,88
• ES – R$27.165,48
• Outros – R$19.849,53

Escreva um programa na linguagem que desejar onde calcule o percentual de representação que cada estado teve dentro do valor total mensal da distribuidora.  

#Programa calculo percentual de faturamento por estado:

faturamento = { 
     "SP": 67836.43,
     "RJ": 36678.66.
     "MG": 29229.88,
     "ES": 27165.48,
     "Outros": 19849.53
}
total = sum(faturamento.values())

percentuais = {estado: (valor / total ) * 100 for estado, valor in faturamento.items()}

for estado, percentual in percentuais.itens():
    print(f"{estado}: {percentual: .2f}%")

#

5) Escreva um programa que inverta os caracteres de um string.

a) Essa string pode ser informada através de qualquer entrada de sua preferência ou pode ser previamente definida no código;
b) Evite usar funções prontas, como, por exemplo, reverse;

#Programa invertendo string:

def inverter_string(s):
    invertida - ""
    for char in s:
        invertida - char + invertida 
    return invertida

string = input("Informar uma string:") 
print(f"String invertida: {inverter+string(string)}")
